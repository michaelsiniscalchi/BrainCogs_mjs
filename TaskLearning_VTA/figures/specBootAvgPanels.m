function ax = specBootAvgPanels( params )

% switch figID
%     case 'bootAvg_choice'
%     case 'bootAvg_cue'
%     case 'bootAvg_outcome'
% end

colors = params.all.colors;

%Specify struct 'ax' containing variables and plotting params for each figure panel:

i=1;

%Summary Figure for Cue Region of Maze
ax(i).title         = "Choice";
ax(i).comparison    = "cue-region";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["left", "right"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.left,colors.right}; %Choice: left/hit/sound vs right/hit/sound
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;
ax(i).title         = "Prior Choice";
ax(i).comparison    = "cue-region";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["priorLeft", "priorRight"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.left,colors.right}; %Choice: left/hit/sound vs right/hit/sound
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;
ax(i).title         = "Cue Side";
ax(i).comparison    = "cue-region";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["leftTowers", "rightTowers"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.left,colors.right}; %Choice: left/hit/sound vs right/hit/sound
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;
ax(i).title         = "Cue Side";
ax(i).comparison    = "cue-region";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["leftPuffs", "rightPuffs"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.left,colors.right}; %Choice: left/hit/sound vs right/hit/sound
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;
ax(i).title         = 'Accuracy';
ax(i).comparison    = "cue-region";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["correct", "error"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.correct, colors.err}; %Outcome: hit/priorHit vs err/priorHit
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;
ax(i).title         = 'Prior Outcome';
ax(i).comparison    = "cue-region";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["priorCorrect", "priorError"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.correct, colors.err}; %Outcome: hit/priorHit vs err/priorHit
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;

% ax(i).title         = "Rule Conflict";
% ax(i).comparison    = "conflict-cue-region";
% ax(i).trigger       = "cueRegion";
% ax(i).trialType     = ["congruent", "conflict"];
% ax(i).window        = [-50, 300];
% ax(i).color         = {colors.congruent, colors.conflict}; %Choice: left/hit/sound vs right/hit/sound
% ax(i).lineStyle     = {'-','-'};
% ax(i).xLabel        = 'Distance (cm)';  % XLabel
% i=i+1;

ax(i).title         = "Position";
ax(i).comparison    = "position";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["forward"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.data}; %Choice: left/hit/sound vs right/hit/sound
ax(i).lineStyle     = {'-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;

ax(i).title         = "Air Puffs";
ax(i).comparison    = "cueRegion-cue-count";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["loPuffs","hiPuffs"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.orange2, colors.orange}; %Choice: left/hit/sound vs right/hit/sound
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;
ax(i).title         = "Towers";
ax(i).comparison    = "cueRegion-cue-count";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["loTowers","hiTowers"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.orange2, colors.orange}; %Choice: left/hit/sound vs right/hit/sound
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;

ax(i).title         = 'High Tower Count';
ax(i).comparison    = "cueRegion-towerCount-outcome";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["correct_hiTowers", "error_hiTowers"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.correct, colors.err}; %Outcome: hit/priorHit vs err/priorHit
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;
ax(i).title         = 'Low Tower Count';
ax(i).comparison    = "cueRegion-towerCount-outcome";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["correct_loTowers", "error_loTowers"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.correct, colors.err}; %Outcome: hit/priorHit vs err/priorHit
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;
ax(i).title         = 'No Towers';
ax(i).comparison    = "cueRegion-towerCount-outcome";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["correct_noTowers", "error_noTowers"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.correct, colors.err}; %Outcome: hit/priorHit vs err/priorHit
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;

ax(i).title         = 'High Puff Count';
ax(i).comparison    = "cueRegion-puffCount-outcome";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["correct_hiTowers", "error_hiTowers"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.correct, colors.err}; %Outcome: hit/priorHit vs err/priorHit
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;
ax(i).title         = 'Low Puff Count';
ax(i).comparison    = "cueRegion-puffCount-outcome";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["correct_loTowers", "error_loTowers"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.correct, colors.err}; %Outcome: hit/priorHit vs err/priorHit
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;
ax(i).title         = 'No Puffs';
ax(i).comparison    = "cueRegion-puffCount-outcome";
ax(i).trigger       = "cueRegion";
ax(i).trialType     = ["correct_noTowers", "error_noTowers"];
ax(i).window        = [-50, 300];
ax(i).color         = {colors.correct, colors.err}; %Outcome: hit/priorHit vs err/priorHit
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Distance (cm)';  % XLabel
i=i+1;

ax(i).title         = 'Rewarded';
ax(i).comparison    = "prior-outcome";
ax(i).trigger       = "outcome";
ax(i).trialType     = ["correct_priorCorrect", "correct_priorError"];
ax(i).window        = [-1, 3];
ax(i).color         = {colors.correct, colors.correct2}; %Outcome: hit/priorHit vs err/priorHit
ax(i).lineStyle     = {'-',':'};
ax(i).xLabel        = 'Time from outcome (s)';  % XLabel
i=i+1;
ax(i).title         = 'Unrewarded';
ax(i).comparison    = "prior-outcome";
ax(i).trigger       = "outcome";
ax(i).trialType     = ["error_priorCorrect", "error_priorError"];
ax(i).window        = [-1, 3];
ax(i).color         = {colors.err, colors.err2}; %Outcome: hit/priorHit vs err/priorHit
ax(i).lineStyle     = {'-',':'};
ax(i).xLabel        = 'Time from outcome (s)';  % XLabel
i=i+1;

ax(i).title         = 'Rewarded';
ax(i).comparison    = "choice-outcome";
ax(i).trigger       = "outcome";
ax(i).trialType     = ["left_correct", "right_correct"];
ax(i).window        = [-1, 3];
ax(i).color         = {colors.left, colors.right}; 
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Time from outcome (s)';  % XLabel
i=i+1;
ax(i).title         = 'Unrewarded';
ax(i).comparison    = "choice-outcome";
ax(i).trigger       = "outcome";
ax(i).trialType     = ["left_error", "right_error"];
ax(i).window        = [-1, 3];
ax(i).color         = {colors.left, colors.right}; 
ax(i).lineStyle     = {':',':'};
ax(i).xLabel        = 'Time from outcome (s)';  % XLabel
i=i+1;

% ax(i).title         = 'Rewarded';
% ax(i).comparison    = "conflict-outcome";
% ax(i).trigger       = "outcome";
% ax(i).trialType     = ["congruent_correct", "conflict_correct"];
% ax(i).window        = [-1, 3];
% ax(i).color         = {colors.correct,colors.correct2}; %Outcome: hit/priorHit vs err/priorHit
% ax(i).lineStyle     = {'-',':'};
% ax(i).xLabel        = 'Time from outcome (s)';  % XLabel
% i=i+1;
% ax(i).title         = 'Unrewarded';
% ax(i).comparison    = "conflict-outcome";
% ax(i).trigger       = "outcome";
% ax(i).trialType     = ["congruent_error", "conflict_error"];
% ax(i).window        = [-1, 3];
% ax(i).color         = {colors.err, colors.err2}; %Outcome: hit/priorHit vs err/priorHit
% ax(i).lineStyle     = {'-',':'};
% ax(i).xLabel        = 'Time from outcome (s)';  % XLabel
% i=i+1;

ax(i).title         = 'Outcome';
ax(i).comparison    = "reward-noReward";
ax(i).trigger       = "outcome";
ax(i).trialType     = ["correct", "error"];
ax(i).window        = [-1, 3];
ax(i).color         = {colors.correct,colors.err}; %Outcome: hit/priorHit vs err/priorHit
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Time from outcome (s)';  % XLabel
i=i+1;

ax(i).title      = 'Rewarded';
ax(i).comparison   = "towerCount-outcome";
ax(i).trigger   = "outcome";
ax(i).trialType = ["hiTowers_correct", "loTowers_correct"];
ax(i).window    = [-1, 3];
ax(i).color      = {colors.correct, colors.correct2}; 
ax(i).lineStyle  = {'-',':'};
ax(i).xLabel = 'Time from first cue (s)';  % XLabel
i=i+1;
ax(i).title      = 'Unrewarded';
ax(i).comparison   = "towerCount-outcome";
ax(i).trigger   = "outcome";
ax(i).trialType = ["hiTowers_error", "loTowers_error"];
ax(i).window    = [-1, 3];
ax(i).color      = {colors.err, colors.err2};
ax(i).lineStyle  = {'-',':'};
ax(i).xLabel = 'Time from first cue (s)';  % XLabel
i=i+1;

ax(i).title      = 'Rewarded';
ax(i).comparison   = "puffCount-outcome";
ax(i).trigger   = "outcome";
ax(i).trialType = ["hiPuffs_correct", "loPuffs_correct"];
ax(i).window    = [-1, 3];
ax(i).color      = {colors.correct, colors.correct2}; 
ax(i).lineStyle  = {'-',':'};
ax(i).xLabel = 'Time from first cue (s)';  % XLabel
i=i+1;
ax(i).title      = 'Unrewarded';
ax(i).comparison   = "puffCount-outcome";
ax(i).trigger   = "outcome";
ax(i).trialType = ["hiPuffs_error", "loPuffs_error"];
ax(i).window    = [-1, 3];
ax(i).color      = {colors.err, colors.err2}; 
ax(i).lineStyle  = {'-',':'};
ax(i).xLabel = 'Time from first cue (s)';  % XLabel
i=i+1;

ax(i).title         = 'Time';
ax(i).comparison    = "start";
ax(i).trigger       = "start";
ax(i).trialType     = "forward";
ax(i).window        = [-3, 7];
ax(i).color         = {colors.data}; %Outcome: hit/priorHit vs err/priorHit
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Time from start (s)';  % XLabel
i=i+1;

ax(i).title         = 'Choice';
ax(i).comparison    = "choice-start";
ax(i).trigger       = "start";
ax(i).trialType     = ["left", "right"];
ax(i).window        = [-1, 3];
ax(i).color         = {colors.left, colors.right};
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Time from start (s)';  % XLabel
i=i+1;

ax(i).title         = 'Choice';
ax(i).comparison    = "choice-turn";
ax(i).trigger       = "turnEntry";
ax(i).trialType     = ["left", "right"];
ax(i).window        = [-1, 3];
ax(i).color         = {colors.left, colors.right};
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Time from turn (s)';  % XLabel
i=i+1;

ax(i).title      = 'Air Puff Responses';
ax(i).comparison   = 'first-puff';
ax(i).trigger    = "firstPuff";
ax(i).trialType  = ["leftPuffs", "rightPuffs"];
ax(i).window     = [-1, 3];
ax(i).color      = {colors.left, colors.right}; 
ax(i).lineStyle  = {'-','-'};
ax(i).xLabel = 'Time from first cue (s)';  % XLabel
i=i+1;
ax(i).title      = 'Low Count Trials';
ax(i).comparison   = 'first-puff-count';
ax(i).trigger   = "firstPuff";
ax(i).trialType = ["leftPuffs_loPuffs", "rightPuffs_loPuffs"];
ax(i).window    = [-1, 3];
ax(i).color      = {colors.left, colors.right}; 
ax(i).lineStyle  = {'-','-'};
ax(i).xLabel = 'Time from first cue (s)';  % XLabel
i=i+1;
ax(i).title      = 'High Count Trials';
ax(i).comparison   = 'first-puff-count';
ax(i).trigger   = "firstPuff";
ax(i).trialType = ["leftPuffs_hiPuffs", "rightPuffs_hiPuffs"];
ax(i).window    = [-1, 3];
ax(i).color      = {colors.left, colors.right}; 
ax(i).lineStyle  = {'-','-'};
ax(i).xLabel = 'Time from first cue (s)';  % XLabel
i=i+1;

ax(i).title      = 'Tower Responses';
ax(i).comparison   = 'first-tower';
ax(i).trigger   = "firstTower";
ax(i).trialType = ["leftTowers", "rightTowers"];
ax(i).window    = [-1, 3];
ax(i).color      = {colors.left, colors.right}; 
ax(i).lineStyle  = {'-','-'};
ax(i).xLabel = 'Time from first cue (s)';  % XLabel
i=i+1;
ax(i).title      = 'Low Count Trials';
ax(i).comparison   = 'first-tower-count';
ax(i).trigger   = "firstTower";
ax(i).trialType = ["leftTowers_loTowers", "rightTowers_loTowers"];
ax(i).window    = [-1, 3];
ax(i).color      = {colors.left, colors.right}; 
ax(i).lineStyle  = {'-','-'};
ax(i).xLabel = 'Time from first cue (s)';  % XLabel
i=i+1;
ax(i).title      = 'High Count Trials';
ax(i).comparison   = 'first-tower-count';
ax(i).trigger   = "firstTower";
ax(i).trialType = ["leftTowers_hiTowers", "rightTowers_hiTowers"];
ax(i).window    = [-1, 3];
ax(i).color      = {colors.left, colors.right}; 
ax(i).lineStyle  = {'-','-'};
ax(i).xLabel = 'Time from first cue (s)';  % XLabel
i=i+1;

% ax(i).title      = 'Last Puff';
% ax(i).comparison   = 'last-puff';
% ax(i).trigger   = "lastPuff";
% ax(i).trialType = ["leftPuffs", "rightPuffs"];
% ax(i).window    = [-1, 3];
% ax(i).color      = {colors.left,colors.right}; 
% ax(i).lineStyle  = {'-','-'};
% ax(i).xLabel = 'Time from last cue (s)';  % XLabel
% i=i+1;
% 
% ax(i).title      = 'Last Tower';
% ax(i).comparison   = 'last-tower';
% ax(i).trigger   = "lastTower";
% ax(i).trialType = ["leftTowers", "rightTowers"];
% ax(i).window    = [-1, 3];
% ax(i).color      = {colors.left,colors.right}; 
% ax(i).lineStyle  = {'-','-'};
% ax(i).xLabel = 'Time from last cue (s)';  % XLabel
% i=i+1;

ax(i).title         = "Tower Side";
ax(i).comparison    = "tower-onset";
ax(i).trigger       = "towers";
ax(i).trialType     = ["leftTowers", "rightTowers"];
ax(i).window        = [-1, 3];
ax(i).color         = {colors.left, colors.right}; %Choice: left/hit/sound vs right/hit/sound
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Time from cue onset (s)';  % XLabel
i=i+1;
ax(i).title         = "Tower Count";
ax(i).comparison    = "tower-onset";
ax(i).trigger       = "towers";
ax(i).trialType     = ["hiTowers", "loTowers"];
ax(i).window        = [-1, 3];
ax(i).color         = {colors.orange, colors.orange2}; %Choice: left/hit/sound vs right/hit/sound
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Time from cue onset (s)';  % XLabel
i=i+1;

ax(i).title         = "Puff Side";
ax(i).comparison    = "puff-onset";
ax(i).trigger       = "puffs";
ax(i).trialType     = ["leftPuffs", "rightPuffs"];
ax(i).window        = [-1, 3];
ax(i).color         = {colors.left, colors.right}; %Choice: left/hit/sound vs right/hit/sound
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Time from cue onset (s)';  % XLabel
i=i+1;
ax(i).title         = "Puff Count";
ax(i).comparison    = "puff-onset";
ax(i).trigger       = "puffs";
ax(i).trialType     = ["hiPuffs", "loPuffs"];
ax(i).window        = [-1, 3];
ax(i).color         = {colors.orange, colors.orange2}; %Choice: left/hit/sound vs right/hit/sound
ax(i).lineStyle     = {'-','-'};
ax(i).xLabel        = 'Time from cue onset (s)';  % XLabel
i=i+1;


[ax(:).yLabel]          = deal('Cellular Fluorescence (dF/F)');
[ax(:).verboseLegend]   = deal(false);